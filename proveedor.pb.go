// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proveedor.proto

package proveedor

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Market_Request struct {
	IdProducto           int32    `protobuf:"varint,1,opt,name=id_producto,json=idProducto,proto3" json:"id_producto,omitempty"`
	Nombre               string   `protobuf:"bytes,2,opt,name=nombre,proto3" json:"nombre,omitempty"`
	CantidadRequerida    int32    `protobuf:"varint,3,opt,name=cantidad_requerida,json=cantidadRequerida,proto3" json:"cantidad_requerida,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Market_Request) Reset()         { *m = Market_Request{} }
func (m *Market_Request) String() string { return proto.CompactTextString(m) }
func (*Market_Request) ProtoMessage()    {}
func (*Market_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec91ad46b83e9da9, []int{0}
}

func (m *Market_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Market_Request.Unmarshal(m, b)
}
func (m *Market_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Market_Request.Marshal(b, m, deterministic)
}
func (m *Market_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Market_Request.Merge(m, src)
}
func (m *Market_Request) XXX_Size() int {
	return xxx_messageInfo_Market_Request.Size(m)
}
func (m *Market_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Market_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Market_Request proto.InternalMessageInfo

func (m *Market_Request) GetIdProducto() int32 {
	if m != nil {
		return m.IdProducto
	}
	return 0
}

func (m *Market_Request) GetNombre() string {
	if m != nil {
		return m.Nombre
	}
	return ""
}

func (m *Market_Request) GetCantidadRequerida() int32 {
	if m != nil {
		return m.CantidadRequerida
	}
	return 0
}

type Proveedor_Response struct {
	RespuestaProveedor   string   `protobuf:"bytes,1,opt,name=respuesta_proveedor,json=respuestaProveedor,proto3" json:"respuesta_proveedor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Proveedor_Response) Reset()         { *m = Proveedor_Response{} }
func (m *Proveedor_Response) String() string { return proto.CompactTextString(m) }
func (*Proveedor_Response) ProtoMessage()    {}
func (*Proveedor_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec91ad46b83e9da9, []int{1}
}

func (m *Proveedor_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Proveedor_Response.Unmarshal(m, b)
}
func (m *Proveedor_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Proveedor_Response.Marshal(b, m, deterministic)
}
func (m *Proveedor_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Proveedor_Response.Merge(m, src)
}
func (m *Proveedor_Response) XXX_Size() int {
	return xxx_messageInfo_Proveedor_Response.Size(m)
}
func (m *Proveedor_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Proveedor_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Proveedor_Response proto.InternalMessageInfo

func (m *Proveedor_Response) GetRespuestaProveedor() string {
	if m != nil {
		return m.RespuestaProveedor
	}
	return ""
}

func init() {
	proto.RegisterType((*Market_Request)(nil), "Market_Request")
	proto.RegisterType((*Proveedor_Response)(nil), "Proveedor_Response")
}

func init() { proto.RegisterFile("proveedor.proto", fileDescriptor_ec91ad46b83e9da9) }

var fileDescriptor_ec91ad46b83e9da9 = []byte{
	// 203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x31, 0x4b, 0xc6, 0x30,
	0x10, 0x86, 0xa9, 0xe2, 0x07, 0x39, 0xc1, 0xe2, 0x15, 0xa4, 0xb8, 0x58, 0x3a, 0x75, 0xb1, 0xa2,
	0xee, 0x82, 0x83, 0xa3, 0x50, 0xf2, 0x07, 0x42, 0xda, 0xdc, 0x10, 0xc4, 0x5e, 0xbc, 0xa4, 0xe2,
	0xcf, 0x97, 0x96, 0x36, 0x20, 0x8e, 0x6f, 0x1e, 0xde, 0xdc, 0x73, 0x07, 0x65, 0x10, 0xfe, 0x26,
	0x72, 0x2c, 0x7d, 0x10, 0x4e, 0xdc, 0xfe, 0xc0, 0xd5, 0xbb, 0x95, 0x0f, 0x4a, 0x46, 0xd3, 0xd7,
	0x42, 0x31, 0xe1, 0x1d, 0x5c, 0x7a, 0x67, 0x82, 0xb0, 0x5b, 0xa6, 0xc4, 0x75, 0xd1, 0x14, 0xdd,
	0x85, 0x06, 0xef, 0x86, 0xfd, 0x05, 0x6f, 0xe0, 0x34, 0xf3, 0xe7, 0x28, 0x54, 0x9f, 0x35, 0x45,
	0xa7, 0xf4, 0x9e, 0xf0, 0x1e, 0x70, 0xb2, 0x73, 0xf2, 0xce, 0x3a, 0x23, 0xeb, 0x67, 0xe2, 0x9d,
	0xad, 0xcf, 0xb7, 0xfe, 0xf5, 0x41, 0xf4, 0x01, 0xda, 0x37, 0xc0, 0xe1, 0x90, 0x31, 0x9a, 0x62,
	0xe0, 0x39, 0x12, 0x3e, 0x40, 0x25, 0x14, 0xc3, 0x6a, 0x62, 0x4d, 0x96, 0xdd, 0x2c, 0x94, 0xc6,
	0x8c, 0x72, 0xf3, 0xe9, 0x05, 0x54, 0x0e, 0xf8, 0x08, 0xea, 0x75, 0xb4, 0x31, 0xd1, 0x44, 0x82,
	0x65, 0xff, 0x77, 0xb3, 0xdb, 0xaa, 0xff, 0x3f, 0x70, 0x3c, 0x6d, 0x77, 0x78, 0xfe, 0x0d, 0x00,
	0x00, 0xff, 0xff, 0x9e, 0x2d, 0x71, 0xfa, 0x1a, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProveedorClient is the client API for Proveedor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProveedorClient interface {
	Abastecer(ctx context.Context, in *Market_Request, opts ...grpc.CallOption) (*Proveedor_Response, error)
}

type proveedorClient struct {
	cc *grpc.ClientConn
}

func NewProveedorClient(cc *grpc.ClientConn) ProveedorClient {
	return &proveedorClient{cc}
}

func (c *proveedorClient) Abastecer(ctx context.Context, in *Market_Request, opts ...grpc.CallOption) (*Proveedor_Response, error) {
	out := new(Proveedor_Response)
	err := c.cc.Invoke(ctx, "/Proveedor/Abastecer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProveedorServer is the server API for Proveedor service.
type ProveedorServer interface {
	Abastecer(context.Context, *Market_Request) (*Proveedor_Response, error)
}

// UnimplementedProveedorServer can be embedded to have forward compatible implementations.
type UnimplementedProveedorServer struct {
}

func (*UnimplementedProveedorServer) Abastecer(ctx context.Context, req *Market_Request) (*Proveedor_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Abastecer not implemented")
}

func RegisterProveedorServer(s *grpc.Server, srv ProveedorServer) {
	s.RegisterService(&_Proveedor_serviceDesc, srv)
}

func _Proveedor_Abastecer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Market_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProveedorServer).Abastecer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Proveedor/Abastecer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProveedorServer).Abastecer(ctx, req.(*Market_Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Proveedor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Proveedor",
	HandlerType: (*ProveedorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Abastecer",
			Handler:    _Proveedor_Abastecer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proveedor.proto",
}
